1.React-native安卓打包出现Execution failed for task ':react-native-fetch-blob:verifyReleaseResources
2018年12月19日 08:38:17 飞向Hadoop 阅读数：337
原因：项目的gradle版本升级了导致第三方插件无法打包
解决方法：从node_modules文件夹中找到 react-native-fetch-blob/android/build.gradle ，并修改如下部分
compileSdkVersion 23
buildToolsVersion "23.0.3"
defaultConfig {
minSdkVersion 16
targetSdkVersion 23
versionCode 1
versionName "1.0"
}

改为

compileSdkVersion 26
buildToolsVersion "26.0.3"
defaultConfig {
minSdkVersion 16
targetSdkVersion 26
versionCode 1
versionName "1.0"
}

2.Could not find com.android.tools.build:aapt2:3.2.1-4818971.
Android Studio升级到3.2.1后，运行项目报如下错：

Could not find com.android.tools.build:aapt2:3.2.1-4818971.
Searched in the following locations:
    file:/D:/AndroidStudio/sdk/extras/m2repository/com/android/tools/build/aapt2/3.2.1-4818971/aapt2-3.2.1-4818971.pom
    file:/D:/AndroidStudio/sdk/extras/m2repository/com/android/tools/build/aapt2/3.2.1-4818971/aapt2-3.2.1-4818971-windows.jar
    file:/D:/AndroidStudio/sdk/extras/google/m2repository/com/android/tools/build/aapt2/3.2.1-4818971/aapt2-3.2.1-4818971.pom
    file:/D:/AndroidStudio/sdk/extras/google/m2repository/com/android/tools/build/aapt2/3.2.1-4818971/aapt2-3.2.1-4818971-windows.jar
    file:/D:/AndroidStudio/sdk/extras/android/m2repository/com/android/tools/build/aapt2/3.2.1-4818971/aapt2-3.2.1-4818971.pom
    file:/D:/AndroidStudio/sdk/extras/android/m2repository/com/android/tools/build/aapt2/3.2.1-4818971/aapt2-3.2.1-4818971-windows.jar
    https://jcenter.bintray.com/com/android/tools/build/aapt2/3.2.1-4818971/aapt2-3.2.1-4818971.pom
    https://jcenter.bintray.com/com/android/tools/build/aapt2/3.2.1-4818971/aapt2-3.2.1-4818971-windows.jar
Required by:
    project :app
 

解决方法很简单：

在项目的build.gradle文件中，新增一行google()即可解决

allprojects {
    repositories {
        jcenter()
        google()//新增这一行
    }
}
--------------------- 
3.android出现这个undefined is not an object (evaluating 'RNFetchBlob.DocumentDir')
https://www.cnblogs.com/details-666/p/react-native-fetch-blob.html


4.解决出现Configuration 'compile' is obsolete and has been replaced with 'implementation' and 'api'.
Warning:Configuration 'compile' is obsolete and has been replaced with 'implementation'. It will be

**Warning:Configuration ‘compile’ is obsolete and has been replaced with ‘implementation’. 
It will be removed at the end of 2018** 
compile会被在2018年底取消，会被api替代，原来只是警告，今天用发现编译报错直接过不去了。

解决方法：

  将build.gradle(Module.app)中dependencies的compile换成implementation 即可。如下所示：
dependencies {
implementation fileTree(dir: 'libs', include: ['*.jar'])
implementation 'com.android.support:appcompat-v7:22.0.0'
implementation files('libs/Msc.jar')
implementation files('libs/Sunflower.jar')
} 
关于compile与implementation的区别。

compile： 
可以传递依赖引用，编译时间相对来说长久一些

implementation： 
不可传递依赖引用，比如，B依赖A，C再依赖B,C却不能依赖A的引用或者依赖。当然他的编译时间就会短一些。

对于api代替compile,他们功能相同。
--------------------- 
作者：dahaiChang 
来源：CSDN 
原文：https://blog.csdn.net/u010194538/article/details/80261125 
版权声明：本文为博主原创文章，转载请附上博文链接！

